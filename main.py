import logging
logging.basicConfig(
    filename='filelog.log',
    filemode = 'a',
    level = logging.INFO,
    encoding='utf-8',
    format = '%(name)s | %(asctime)s | %(levelname)s | %(message)s'
)


Chisla = {}
def Plus (a:int,b:int)->dict:
    S=a+b
    Chisla['Plus']=S
    logging.info('–ü—Ä–æ—Ü–µ—Å—Å —Å–ª–æ–∂–µ–Ω–∏—è')
    return Chisla
def Minus (a:int,b:int)->dict:
    S=a-b
    Chisla['Minus']=S
    logging.info('–ü—Ä–æ—Ü–µ—Å—Å –≤—ã—á–∏—Ç–∞–Ω–∏—è')
    return Chisla
def Umnoj (a:int,b:int)->dict:
    S=a*b
    Chisla['Umnoj']=S
    logging.info('–ü—Ä–æ—Ü–µ—Å—Å —É–º–Ω–æ–∂–µ–Ω–∏—è')
    return Chisla
def Del (a:int,b:int)->dict:
    try:
        S=a/b
        logging.info('–ü—Ä–æ—Ü–µ—Å—Å –¥–µ–ª–µ–Ω–∏—è')
    except ZeroDivisionError:
        print('–ù–∞ –Ω–æ–ª—å –¥–µ–ª–∏—Ç—å –Ω–µ–ª—å–∑—è')
        logging.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–ª–∏—Ç –Ω–∞ 0 üòÇüòÇüòÇ')
        S=None
    finally:
        Chisla['Del']=S
    return Chisla

try:
    logging.info('–ë–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    a = int(input('–í–≤–µ–¥–∏—Ç–µ int: '))
    b = int(input('–í–≤–µ–¥–∏—Ç–µ int: '))
    do = int(input('–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å  '
                   '1-—É–º–Ω–æ–∂–∏—Ç—å  '
                   '2-—Å–ª–æ–∂–∏—Ç—å  '
                   '3-–≤—ã—á–µ—Å—Ç—å  '
                   '4-—Ä–∞–∑–¥–µ–ª–∏—Ç—å: '))

    if do == 1:
        print(Umnoj(a, b))
    elif do == 2:
        print(Plus(a, b))
    elif do == 3:
        print(Minus(a, b))
    elif do == 4:
        print(Del(a, b))
    else:
        print('–í—ã –≤–≤–µ–ª–∏ —Ç—á–æ-—Ç–æ –Ω–µ —Ç–æ')
        logging.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤—ë–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4—Ä–µ—Ö')

except ValueError:
    print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ int')
    logging.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–µ int')







